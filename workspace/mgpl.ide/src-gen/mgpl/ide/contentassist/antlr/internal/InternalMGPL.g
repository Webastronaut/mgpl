/*
 * generated by Xtext 2.16.0
 */
grammar InternalMGPL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package mgpl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package mgpl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import mgpl.services.MGPLGrammarAccess;

}
@parser::members {
	private MGPLGrammarAccess grammarAccess;

	public void setGrammarAccess(MGPLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProg
entryRuleProg
:
{ before(grammarAccess.getProgRule()); }
	 ruleProg
{ after(grammarAccess.getProgRule()); } 
	 EOF 
;

// Rule Prog
ruleProg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgAccess().getGroup()); }
		(rule__Prog__Group__0)
		{ after(grammarAccess.getProgAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecl
entryRuleDecl
:
{ before(grammarAccess.getDeclRule()); }
	 ruleDecl
{ after(grammarAccess.getDeclRule()); } 
	 EOF 
;

// Rule Decl
ruleDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclAccess().getGroup()); }
		(rule__Decl__Group__0)
		{ after(grammarAccess.getDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInit
entryRuleInit
:
{ before(grammarAccess.getInitRule()); }
	 ruleInit
{ after(grammarAccess.getInitRule()); } 
	 EOF 
;

// Rule Init
ruleInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitAccess().getGroup()); }
		(rule__Init__Group__0)
		{ after(grammarAccess.getInitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjDecl
entryRuleObjDecl
:
{ before(grammarAccess.getObjDeclRule()); }
	 ruleObjDecl
{ after(grammarAccess.getObjDeclRule()); } 
	 EOF 
;

// Rule ObjDecl
ruleObjDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjDeclAccess().getGroup()); }
		(rule__ObjDecl__Group__0)
		{ after(grammarAccess.getObjDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjType
entryRuleObjType
:
{ before(grammarAccess.getObjTypeRule()); }
	 ruleObjType
{ after(grammarAccess.getObjTypeRule()); } 
	 EOF 
;

// Rule ObjType
ruleObjType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjTypeAccess().getAlternatives()); }
		(rule__ObjType__Alternatives)
		{ after(grammarAccess.getObjTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrAss
entryRuleAttrAss
:
{ before(grammarAccess.getAttrAssRule()); }
	 ruleAttrAss
{ after(grammarAccess.getAttrAssRule()); } 
	 EOF 
;

// Rule AttrAss
ruleAttrAss 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrAssAccess().getGroup()); }
		(rule__AttrAss__Group__0)
		{ after(grammarAccess.getAttrAssAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getAlternatives()); }
		(rule__Block__Alternatives)
		{ after(grammarAccess.getBlockAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnimBlock
entryRuleAnimBlock
:
{ before(grammarAccess.getAnimBlockRule()); }
	 ruleAnimBlock
{ after(grammarAccess.getAnimBlockRule()); } 
	 EOF 
;

// Rule AnimBlock
ruleAnimBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnimBlockAccess().getGroup()); }
		(rule__AnimBlock__Group__0)
		{ after(grammarAccess.getAnimBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParamDecl
entryRuleParamDecl
:
{ before(grammarAccess.getParamDeclRule()); }
	 ruleParamDecl
{ after(grammarAccess.getParamDeclRule()); } 
	 EOF 
;

// Rule ParamDecl
ruleParamDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamDeclAccess().getGroup()); }
		(rule__ParamDecl__Group__0)
		{ after(grammarAccess.getParamDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventBlock
entryRuleEventBlock
:
{ before(grammarAccess.getEventBlockRule()); }
	 ruleEventBlock
{ after(grammarAccess.getEventBlockRule()); } 
	 EOF 
;

// Rule EventBlock
ruleEventBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventBlockAccess().getGroup()); }
		(rule__EventBlock__Group__0)
		{ after(grammarAccess.getEventBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyStroke
entryRuleKeyStroke
:
{ before(grammarAccess.getKeyStrokeRule()); }
	 ruleKeyStroke
{ after(grammarAccess.getKeyStrokeRule()); } 
	 EOF 
;

// Rule KeyStroke
ruleKeyStroke 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyStrokeAccess().getAlternatives()); }
		(rule__KeyStroke__Alternatives)
		{ after(grammarAccess.getKeyStrokeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmtBlock
entryRuleStmtBlock
:
{ before(grammarAccess.getStmtBlockRule()); }
	 ruleStmtBlock
{ after(grammarAccess.getStmtBlockRule()); } 
	 EOF 
;

// Rule StmtBlock
ruleStmtBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtBlockAccess().getGroup()); }
		(rule__StmtBlock__Group__0)
		{ after(grammarAccess.getStmtBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmt
entryRuleStmt
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtAccess().getAlternatives()); }
		(rule__Stmt__Alternatives)
		{ after(grammarAccess.getStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmt
entryRuleIfStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup()); }
		(rule__IfStmt__Group__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStmt
entryRuleForStmt
:
{ before(grammarAccess.getForStmtRule()); }
	 ruleForStmt
{ after(grammarAccess.getForStmtRule()); } 
	 EOF 
;

// Rule ForStmt
ruleForStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtAccess().getGroup()); }
		(rule__ForStmt__Group__0)
		{ after(grammarAccess.getForStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssStmt
entryRuleAssStmt
:
{ before(grammarAccess.getAssStmtRule()); }
	 ruleAssStmt
{ after(grammarAccess.getAssStmtRule()); } 
	 EOF 
;

// Rule AssStmt
ruleAssStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssStmtAccess().getGroup()); }
		(rule__AssStmt__Group__0)
		{ after(grammarAccess.getAssStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar
entryRuleVar
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarAccess().getGroup()); }
		(rule__Var__Group__0)
		{ after(grammarAccess.getVarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getDisjExprParserRuleCall()); }
		ruleDisjExpr
		{ after(grammarAccess.getExprAccess().getDisjExprParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDisjExpr
entryRuleDisjExpr
:
{ before(grammarAccess.getDisjExprRule()); }
	 ruleDisjExpr
{ after(grammarAccess.getDisjExprRule()); } 
	 EOF 
;

// Rule DisjExpr
ruleDisjExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDisjExprAccess().getGroup()); }
		(rule__DisjExpr__Group__0)
		{ after(grammarAccess.getDisjExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConjExpr
entryRuleConjExpr
:
{ before(grammarAccess.getConjExprRule()); }
	 ruleConjExpr
{ after(grammarAccess.getConjExprRule()); } 
	 EOF 
;

// Rule ConjExpr
ruleConjExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConjExprAccess().getGroup()); }
		(rule__ConjExpr__Group__0)
		{ after(grammarAccess.getConjExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelExpr
entryRuleRelExpr
:
{ before(grammarAccess.getRelExprRule()); }
	 ruleRelExpr
{ after(grammarAccess.getRelExprRule()); } 
	 EOF 
;

// Rule RelExpr
ruleRelExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelExprAccess().getGroup()); }
		(rule__RelExpr__Group__0)
		{ after(grammarAccess.getRelExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExpr
entryRuleAddExpr
:
{ before(grammarAccess.getAddExprRule()); }
	 ruleAddExpr
{ after(grammarAccess.getAddExprRule()); } 
	 EOF 
;

// Rule AddExpr
ruleAddExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExprAccess().getGroup()); }
		(rule__AddExpr__Group__0)
		{ after(grammarAccess.getAddExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultExpr
entryRuleMultExpr
:
{ before(grammarAccess.getMultExprRule()); }
	 ruleMultExpr
{ after(grammarAccess.getMultExprRule()); } 
	 EOF 
;

// Rule MultExpr
ruleMultExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultExprAccess().getGroup()); }
		(rule__MultExpr__Group__0)
		{ after(grammarAccess.getMultExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimExpr
entryRulePrimExpr
:
{ before(grammarAccess.getPrimExprRule()); }
	 rulePrimExpr
{ after(grammarAccess.getPrimExprRule()); } 
	 EOF 
;

// Rule PrimExpr
rulePrimExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimExprAccess().getAlternatives()); }
		(rule__PrimExpr__Alternatives)
		{ after(grammarAccess.getPrimExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_0()); }
		ruleVarDecl
		{ after(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_0_1()); }
		ruleObjDecl
		{ after(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getInitAssignment_2_0()); }
		(rule__VarDecl__InitAssignment_2_0)?
		{ after(grammarAccess.getVarDeclAccess().getInitAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_2_1()); }
		(rule__VarDecl__Group_2_1__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getGroup_2_0()); }
		(rule__ObjDecl__Group_2_0__0)
		{ after(grammarAccess.getObjDeclAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjDeclAccess().getGroup_2_1()); }
		(rule__ObjDecl__Group_2_1__0)
		{ after(grammarAccess.getObjDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjTypeAccess().getRectangleKeyword_0()); }
		'rectangle'
		{ after(grammarAccess.getObjTypeAccess().getRectangleKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjTypeAccess().getTriangleKeyword_1()); }
		'triangle'
		{ after(grammarAccess.getObjTypeAccess().getTriangleKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getObjTypeAccess().getCircleKeyword_2()); }
		'circle'
		{ after(grammarAccess.getObjTypeAccess().getCircleKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
		ruleAnimBlock
		{ after(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
		ruleEventBlock
		{ after(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStroke__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyStrokeAccess().getSpaceKeyword_0()); }
		'space'
		{ after(grammarAccess.getKeyStrokeAccess().getSpaceKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyStrokeAccess().getLeftarrowKeyword_1()); }
		'leftarrow'
		{ after(grammarAccess.getKeyStrokeAccess().getLeftarrowKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getKeyStrokeAccess().getRightarrowKeyword_2()); }
		'rightarrow'
		{ after(grammarAccess.getKeyStrokeAccess().getRightarrowKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getKeyStrokeAccess().getUparrowKeyword_3()); }
		'uparrow'
		{ after(grammarAccess.getKeyStrokeAccess().getUparrowKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getKeyStrokeAccess().getDownarrowKeyword_4()); }
		'downarrow'
		{ after(grammarAccess.getKeyStrokeAccess().getDownarrowKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
		ruleIfStmt
		{ after(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
		ruleForStmt
		{ after(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getGroup_2()); }
		(rule__Stmt__Group_2__0)
		{ after(grammarAccess.getStmtAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getGroup_1_0_0()); }
		(rule__RelExpr__Group_1_0_0__0)
		{ after(grammarAccess.getRelExprAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelExprAccess().getGroup_1_0_1()); }
		(rule__RelExpr__Group_1_0_1__0)
		{ after(grammarAccess.getRelExprAccess().getGroup_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelExprAccess().getGroup_1_0_2()); }
		(rule__RelExpr__Group_1_0_2__0)
		{ after(grammarAccess.getRelExprAccess().getGroup_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getGroup_1_0_0()); }
		(rule__AddExpr__Group_1_0_0__0)
		{ after(grammarAccess.getAddExprAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddExprAccess().getGroup_1_0_1()); }
		(rule__AddExpr__Group_1_0_1__0)
		{ after(grammarAccess.getAddExprAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getGroup_1_0_0()); }
		(rule__MultExpr__Group_1_0_0__0)
		{ after(grammarAccess.getMultExprAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultExprAccess().getGroup_1_0_1()); }
		(rule__MultExpr__Group_1_0_1__0)
		{ after(grammarAccess.getMultExprAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_0()); }
		(rule__UnaryExpr__Group_0__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimExprParserRuleCall_1()); }
		rulePrimExpr
		{ after(grammarAccess.getUnaryExprAccess().getPrimExprParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_0_0_0()); }
		(rule__UnaryExpr__Group_0_0_0__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_0_0_1()); }
		(rule__UnaryExpr__Group_0_0_1__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimExprAccess().getGroup_0()); }
		(rule__PrimExpr__Group_0__0)
		{ after(grammarAccess.getPrimExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimExprAccess().getGroup_1()); }
		(rule__PrimExpr__Group_1__0)
		{ after(grammarAccess.getPrimExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimExprAccess().getGroup_2()); }
		(rule__PrimExpr__Group_2__0)
		{ after(grammarAccess.getPrimExprAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__0__Impl
	rule__Prog__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getGameKeyword_0()); }
	'game'
	{ after(grammarAccess.getProgAccess().getGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__1__Impl
	rule__Prog__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getNameAssignment_1()); }
	(rule__Prog__NameAssignment_1)
	{ after(grammarAccess.getProgAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__2__Impl
	rule__Prog__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getProgAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__3__Impl
	rule__Prog__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getGroup_3()); }
	(rule__Prog__Group_3__0)?
	{ after(grammarAccess.getProgAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__4__Impl
	rule__Prog__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getProgAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__5__Impl
	rule__Prog__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getDeclarationsAssignment_5()); }
	(rule__Prog__DeclarationsAssignment_5)*
	{ after(grammarAccess.getProgAccess().getDeclarationsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__6__Impl
	rule__Prog__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getInitAssignment_6()); }
	(rule__Prog__InitAssignment_6)
	{ after(grammarAccess.getProgAccess().getInitAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getBlocksAssignment_7()); }
	(rule__Prog__BlocksAssignment_7)*
	{ after(grammarAccess.getProgAccess().getBlocksAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prog__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group_3__0__Impl
	rule__Prog__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getAttrAssignment_3_0()); }
	(rule__Prog__AttrAssignment_3_0)
	{ after(grammarAccess.getProgAccess().getAttrAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getGroup_3_1()); }
	(rule__Prog__Group_3_1__0)*
	{ after(grammarAccess.getProgAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prog__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group_3_1__0__Impl
	rule__Prog__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getProgAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getAttrAssignment_3_1_1()); }
	(rule__Prog__AttrAssignment_3_1_1)
	{ after(grammarAccess.getProgAccess().getAttrAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group__0__Impl
	rule__Decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getAlternatives_0()); }
	(rule__Decl__Alternatives_0)
	{ after(grammarAccess.getDeclAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getDeclAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getTypeAssignment_0()); }
	(rule__VarDecl__TypeAssignment_0)
	{ after(grammarAccess.getVarDeclAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getNameAssignment_1()); }
	(rule__VarDecl__NameAssignment_1)
	{ after(grammarAccess.getVarDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getAlternatives_2()); }
	(rule__VarDecl__Alternatives_2)
	{ after(grammarAccess.getVarDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__0__Impl
	rule__VarDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getArrayDeclVariableAction_2_1_0()); }
	()
	{ after(grammarAccess.getVarDeclAccess().getArrayDeclVariableAction_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__1__Impl
	rule__VarDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_2_1_1()); }
	'['
	{ after(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__2__Impl
	rule__VarDecl__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getLengthAssignment_2_1_2()); }
	(rule__VarDecl__LengthAssignment_2_1_2)
	{ after(grammarAccess.getVarDeclAccess().getLengthAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_2_1_3()); }
	']'
	{ after(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__0__Impl
	rule__Init__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getInitAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getExprParserRuleCall_1()); }
	ruleExpr
	{ after(grammarAccess.getInitAccess().getExprParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group__0__Impl
	rule__ObjDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getTypeAssignment_0()); }
	(rule__ObjDecl__TypeAssignment_0)
	{ after(grammarAccess.getObjDeclAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group__1__Impl
	rule__ObjDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getNameAssignment_1()); }
	(rule__ObjDecl__NameAssignment_1)
	{ after(grammarAccess.getObjDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getAlternatives_2()); }
	(rule__ObjDecl__Alternatives_2)
	{ after(grammarAccess.getObjDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_0__0__Impl
	rule__ObjDecl__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_2_0_0()); }
	'('
	{ after(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_0__1__Impl
	rule__ObjDecl__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getGroup_2_0_1()); }
	(rule__ObjDecl__Group_2_0_1__0)?
	{ after(grammarAccess.getObjDeclAccess().getGroup_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_2_0_2()); }
	')'
	{ after(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_0_1__0__Impl
	rule__ObjDecl__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getAttrAssignment_2_0_1_0()); }
	(rule__ObjDecl__AttrAssignment_2_0_1_0)
	{ after(grammarAccess.getObjDeclAccess().getAttrAssignment_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getGroup_2_0_1_1()); }
	(rule__ObjDecl__Group_2_0_1_1__0)*
	{ after(grammarAccess.getObjDeclAccess().getGroup_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_2_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_0_1_1__0__Impl
	rule__ObjDecl__Group_2_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getCommaKeyword_2_0_1_1_0()); }
	','
	{ after(grammarAccess.getObjDeclAccess().getCommaKeyword_2_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getAttrAssignment_2_0_1_1_1()); }
	(rule__ObjDecl__AttrAssignment_2_0_1_1_1)
	{ after(grammarAccess.getObjDeclAccess().getAttrAssignment_2_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_1__0__Impl
	rule__ObjDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getArrayDeclVariableAction_2_1_0()); }
	()
	{ after(grammarAccess.getObjDeclAccess().getArrayDeclVariableAction_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_1__1__Impl
	rule__ObjDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_2_1_1()); }
	'['
	{ after(grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_1__2__Impl
	rule__ObjDecl__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getLengthAssignment_2_1_2()); }
	(rule__ObjDecl__LengthAssignment_2_1_2)
	{ after(grammarAccess.getObjDeclAccess().getLengthAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_2_1_3()); }
	']'
	{ after(grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAss__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__0__Impl
	rule__AttrAss__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getNameAssignment_0()); }
	(rule__AttrAss__NameAssignment_0)
	{ after(grammarAccess.getAttrAssAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__1__Impl
	rule__AttrAss__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getValueAssignment_2()); }
	(rule__AttrAss__ValueAssignment_2)
	{ after(grammarAccess.getAttrAssAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__0__Impl
	rule__AnimBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }
	'animation'
	{ after(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__1__Impl
	rule__AnimBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
	(rule__AnimBlock__NameAssignment_1)
	{ after(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__2__Impl
	rule__AnimBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__3__Impl
	rule__AnimBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getParamAssignment_3()); }
	(rule__AnimBlock__ParamAssignment_3)
	{ after(grammarAccess.getAnimBlockAccess().getParamAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__4__Impl
	rule__AnimBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getStmtBlockAssignment_5()); }
	(rule__AnimBlock__StmtBlockAssignment_5)
	{ after(grammarAccess.getAnimBlockAccess().getStmtBlockAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamDecl__Group__0__Impl
	rule__ParamDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamDeclAccess().getTypeAssignment_0()); }
	(rule__ParamDecl__TypeAssignment_0)
	{ after(grammarAccess.getParamDeclAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamDeclAccess().getNameAssignment_1()); }
	(rule__ParamDecl__NameAssignment_1)
	{ after(grammarAccess.getParamDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__0__Impl
	rule__EventBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__1__Impl
	rule__EventBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getKeyStrokeAssignment_1()); }
	(rule__EventBlock__KeyStrokeAssignment_1)
	{ after(grammarAccess.getEventBlockAccess().getKeyStrokeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getStmtBlockAssignment_2()); }
	(rule__EventBlock__StmtBlockAssignment_2)
	{ after(grammarAccess.getEventBlockAccess().getStmtBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StmtBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__0__Impl
	rule__StmtBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getStmtBlockAction_0()); }
	()
	{ after(grammarAccess.getStmtBlockAccess().getStmtBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__1__Impl
	rule__StmtBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__2__Impl
	rule__StmtBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getStmtsAssignment_2()); }
	(rule__StmtBlock__StmtsAssignment_2)*
	{ after(grammarAccess.getStmtBlockAccess().getStmtsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group_2__0__Impl
	rule__Stmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2_0()); }
	ruleAssStmt
	{ after(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getStmtAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getConditionAssignment_2()); }
	(rule__IfStmt__ConditionAssignment_2)
	{ after(grammarAccess.getIfStmtAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__4__Impl
	rule__IfStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getThenBlockAssignment_4()); }
	(rule__IfStmt__ThenBlockAssignment_4)
	{ after(grammarAccess.getIfStmtAccess().getThenBlockAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_5()); }
	(rule__IfStmt__Group_5__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_5__0__Impl
	rule__IfStmt__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseKeyword_5_0()); }
	'else'
	{ after(grammarAccess.getIfStmtAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseBlockAssignment_5_1()); }
	(rule__IfStmt__ElseBlockAssignment_5_1)
	{ after(grammarAccess.getIfStmtAccess().getElseBlockAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__0__Impl
	rule__ForStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStmtAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__1__Impl
	rule__ForStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__2__Impl
	rule__ForStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getInitAssignment_2()); }
	(rule__ForStmt__InitAssignment_2)
	{ after(grammarAccess.getForStmtAccess().getInitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__3__Impl
	rule__ForStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__4__Impl
	rule__ForStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getConditionAssignment_4()); }
	(rule__ForStmt__ConditionAssignment_4)
	{ after(grammarAccess.getForStmtAccess().getConditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__5__Impl
	rule__ForStmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__6__Impl
	rule__ForStmt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getLoopAssignment_6()); }
	(rule__ForStmt__LoopAssignment_6)
	{ after(grammarAccess.getForStmtAccess().getLoopAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__7__Impl
	rule__ForStmt__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getStmtBlockAssignment_8()); }
	(rule__ForStmt__StmtBlockAssignment_8)
	{ after(grammarAccess.getForStmtAccess().getStmtBlockAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__0__Impl
	rule__AssStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getVariableAssignment_0()); }
	(rule__AssStmt__VariableAssignment_0)
	{ after(grammarAccess.getAssStmtAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__1__Impl
	rule__AssStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getExpressionAssignment_2()); }
	(rule__AssStmt__ExpressionAssignment_2)
	{ after(grammarAccess.getAssStmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group__0__Impl
	rule__Var__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getIdAssignment_0()); }
	(rule__Var__IdAssignment_0)
	{ after(grammarAccess.getVarAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group__1__Impl
	rule__Var__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getGroup_1()); }
	(rule__Var__Group_1__0)?
	{ after(grammarAccess.getVarAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getGroup_2()); }
	(rule__Var__Group_2__0)?
	{ after(grammarAccess.getVarAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__0__Impl
	rule__Var__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getElementSelectVariableAction_1_0()); }
	()
	{ after(grammarAccess.getVarAccess().getElementSelectVariableAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__1__Impl
	rule__Var__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_1()); }
	'['
	{ after(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__2__Impl
	rule__Var__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getIndexAssignment_1_2()); }
	(rule__Var__IndexAssignment_1_2)
	{ after(grammarAccess.getVarAccess().getIndexAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_2__0__Impl
	rule__Var__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getMemberSelectVariableAction_2_0()); }
	()
	{ after(grammarAccess.getVarAccess().getMemberSelectVariableAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_2__1__Impl
	rule__Var__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getFullStopKeyword_2_1()); }
	'.'
	{ after(grammarAccess.getVarAccess().getFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getMemberNameAssignment_2_2()); }
	(rule__Var__MemberNameAssignment_2_2)
	{ after(grammarAccess.getVarAccess().getMemberNameAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DisjExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DisjExpr__Group__0__Impl
	rule__DisjExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjExprAccess().getConjExprParserRuleCall_0()); }
	ruleConjExpr
	{ after(grammarAccess.getDisjExprAccess().getConjExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DisjExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjExprAccess().getGroup_1()); }
	(rule__DisjExpr__Group_1__0)*
	{ after(grammarAccess.getDisjExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DisjExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DisjExpr__Group_1__0__Impl
	rule__DisjExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjExprAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getDisjExprAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DisjExpr__Group_1__1__Impl
	rule__DisjExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjExprAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getDisjExprAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DisjExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjExprAccess().getRightAssignment_1_2()); }
	(rule__DisjExpr__RightAssignment_1_2)
	{ after(grammarAccess.getDisjExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConjExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjExpr__Group__0__Impl
	rule__ConjExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjExprAccess().getRelExprParserRuleCall_0()); }
	ruleRelExpr
	{ after(grammarAccess.getConjExprAccess().getRelExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjExprAccess().getGroup_1()); }
	(rule__ConjExpr__Group_1__0)*
	{ after(grammarAccess.getConjExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConjExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjExpr__Group_1__0__Impl
	rule__ConjExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjExprAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getConjExprAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjExpr__Group_1__1__Impl
	rule__ConjExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjExprAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getConjExprAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjExprAccess().getRightAssignment_1_2()); }
	(rule__ConjExpr__RightAssignment_1_2)
	{ after(grammarAccess.getConjExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group__0__Impl
	rule__RelExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0()); }
	ruleAddExpr
	{ after(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getGroup_1()); }
	(rule__RelExpr__Group_1__0)*
	{ after(grammarAccess.getRelExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__0__Impl
	rule__RelExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getAlternatives_1_0()); }
	(rule__RelExpr__Alternatives_1_0)
	{ after(grammarAccess.getRelExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getRightAssignment_1_1()); }
	(rule__RelExpr__RightAssignment_1_1)
	{ after(grammarAccess.getRelExprAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1_0_0__0__Impl
	rule__RelExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getEqualsLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getRelExprAccess().getEqualsLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
	'=='
	{ after(grammarAccess.getRelExprAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1_0_1__0__Impl
	rule__RelExpr__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getLessLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getRelExprAccess().getLessLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getLessThanSignKeyword_1_0_1_1()); }
	'<'
	{ after(grammarAccess.getRelExprAccess().getLessThanSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1_0_2__0__Impl
	rule__RelExpr__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getLessOrEqualsLeftAction_1_0_2_0()); }
	()
	{ after(grammarAccess.getRelExprAccess().getLessOrEqualsLeftAction_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getLessThanSignEqualsSignKeyword_1_0_2_1()); }
	'<='
	{ after(grammarAccess.getRelExprAccess().getLessThanSignEqualsSignKeyword_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__0__Impl
	rule__AddExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getMultExprParserRuleCall_0()); }
	ruleMultExpr
	{ after(grammarAccess.getAddExprAccess().getMultExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getGroup_1()); }
	(rule__AddExpr__Group_1__0)*
	{ after(grammarAccess.getAddExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__0__Impl
	rule__AddExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getAlternatives_1_0()); }
	(rule__AddExpr__Alternatives_1_0)
	{ after(grammarAccess.getAddExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getRightAssignment_1_1()); }
	(rule__AddExpr__RightAssignment_1_1)
	{ after(grammarAccess.getAddExprAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1_0_0__0__Impl
	rule__AddExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAddExprAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1_0_1__0__Impl
	rule__AddExpr__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getAddExprAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getAddExprAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group__0__Impl
	rule__MultExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
	{ after(grammarAccess.getMultExprAccess().getUnaryExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getGroup_1()); }
	(rule__MultExpr__Group_1__0)*
	{ after(grammarAccess.getMultExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1__0__Impl
	rule__MultExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getAlternatives_1_0()); }
	(rule__MultExpr__Alternatives_1_0)
	{ after(grammarAccess.getMultExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getRightAssignment_1_1()); }
	(rule__MultExpr__RightAssignment_1_1)
	{ after(grammarAccess.getMultExprAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1_0_0__0__Impl
	rule__MultExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getDivideLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMultExprAccess().getDivideLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getSolidusKeyword_1_0_0_1()); }
	'/'
	{ after(grammarAccess.getMultExprAccess().getSolidusKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1_0_1__0__Impl
	rule__MultExpr__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getTimesLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMultExprAccess().getTimesLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_0_1_1()); }
	'*'
	{ after(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__0__Impl
	rule__UnaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getAlternatives_0_0()); }
	(rule__UnaryExpr__Alternatives_0_0)
	{ after(grammarAccess.getUnaryExprAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getExprAssignment_0_1()); }
	(rule__UnaryExpr__ExprAssignment_0_1)
	{ after(grammarAccess.getUnaryExprAccess().getExprAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0_0_0__0__Impl
	rule__UnaryExpr__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getNegationAction_0_0_0_0()); }
	()
	{ after(grammarAccess.getUnaryExprAccess().getNegationAction_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_0_0_0_1()); }
	'-'
	{ after(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0_0_1__0__Impl
	rule__UnaryExpr__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getComplementAction_0_0_1_0()); }
	()
	{ after(grammarAccess.getUnaryExprAccess().getComplementAction_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_0_0_1_1()); }
	'!'
	{ after(grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_0__0__Impl
	rule__PrimExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getNumberLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getPrimExprAccess().getNumberLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getValueAssignment_0_1()); }
	(rule__PrimExpr__ValueAssignment_0_1)
	{ after(grammarAccess.getPrimExprAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_1__0__Impl
	rule__PrimExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getVarParserRuleCall_1_0()); }
	ruleVar
	{ after(grammarAccess.getPrimExprAccess().getVarParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getGroup_1_1()); }
	(rule__PrimExpr__Group_1_1__0)?
	{ after(grammarAccess.getPrimExprAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimExpr__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_1_1__0__Impl
	rule__PrimExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getTouchesLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getPrimExprAccess().getTouchesLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_1_1__1__Impl
	rule__PrimExpr__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getTouchesKeyword_1_1_1()); }
	'touches'
	{ after(grammarAccess.getPrimExprAccess().getTouchesKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getRightAssignment_1_1_2()); }
	(rule__PrimExpr__RightAssignment_1_1_2)
	{ after(grammarAccess.getPrimExprAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_2__0__Impl
	rule__PrimExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getPrimExprAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_2__1__Impl
	rule__PrimExpr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getExprParserRuleCall_2_1()); }
	ruleExpr
	{ after(grammarAccess.getPrimExprAccess().getExprParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimExpr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimExprAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getPrimExprAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prog__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getProgAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__AttrAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getAttrAttrAssParserRuleCall_3_0_0()); }
		ruleAttrAss
		{ after(grammarAccess.getProgAccess().getAttrAttrAssParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__AttrAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getAttrAttrAssParserRuleCall_3_1_1_0()); }
		ruleAttrAss
		{ after(grammarAccess.getProgAccess().getAttrAttrAssParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__DeclarationsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getDeclarationsDeclParserRuleCall_5_0()); }
		ruleDecl
		{ after(grammarAccess.getProgAccess().getDeclarationsDeclParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__InitAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getInitStmtBlockParserRuleCall_6_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getProgAccess().getInitStmtBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__BlocksAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getBlocksBlockParserRuleCall_7_0()); }
		ruleBlock
		{ after(grammarAccess.getProgAccess().getBlocksBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0()); }
		(
			{ before(grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0()); }
			'int'
			{ after(grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0()); }
		)
		{ after(grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getVarDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__InitAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getInitInitParserRuleCall_2_0_0()); }
		ruleInit
		{ after(grammarAccess.getVarDeclAccess().getInitInitParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__LengthAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getLengthNUMBERTerminalRuleCall_2_1_2_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getVarDeclAccess().getLengthNUMBERTerminalRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getTypeObjTypeParserRuleCall_0_0()); }
		ruleObjType
		{ after(grammarAccess.getObjDeclAccess().getTypeObjTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getObjDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__AttrAssignment_2_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getAttrAttrAssParserRuleCall_2_0_1_0_0()); }
		ruleAttrAss
		{ after(grammarAccess.getObjDeclAccess().getAttrAttrAssParserRuleCall_2_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__AttrAssignment_2_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getAttrAttrAssParserRuleCall_2_0_1_1_1_0()); }
		ruleAttrAss
		{ after(grammarAccess.getObjDeclAccess().getAttrAttrAssParserRuleCall_2_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__LengthAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getLengthNUMBERTerminalRuleCall_2_1_2_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getObjDeclAccess().getLengthNUMBERTerminalRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssAccess().getNameIDFTerminalRuleCall_0_0()); }
		RULE_IDF
		{ after(grammarAccess.getAttrAssAccess().getNameIDFTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssAccess().getValueExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAttrAssAccess().getValueExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getAnimBlockAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__ParamAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getParamParamDeclParserRuleCall_3_0()); }
		ruleParamDecl
		{ after(grammarAccess.getAnimBlockAccess().getParamParamDeclParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__StmtBlockAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getStmtBlockStmtBlockParserRuleCall_5_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getAnimBlockAccess().getStmtBlockStmtBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamDecl__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamDeclAccess().getTypeObjTypeParserRuleCall_0_0()); }
		ruleObjType
		{ after(grammarAccess.getParamDeclAccess().getTypeObjTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getParamDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__KeyStrokeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventBlockAccess().getKeyStrokeKeyStrokeParserRuleCall_1_0()); }
		ruleKeyStroke
		{ after(grammarAccess.getEventBlockAccess().getKeyStrokeKeyStrokeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__StmtBlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventBlockAccess().getStmtBlockStmtBlockParserRuleCall_2_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getEventBlockAccess().getStmtBlockStmtBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__StmtsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtBlockAccess().getStmtsStmtParserRuleCall_2_0()); }
		ruleStmt
		{ after(grammarAccess.getStmtBlockAccess().getStmtsStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getConditionExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getIfStmtAccess().getConditionExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ThenBlockAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getThenBlockStmtBlockParserRuleCall_4_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getIfStmtAccess().getThenBlockStmtBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ElseBlockAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getElseBlockStmtBlockParserRuleCall_5_1_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getIfStmtAccess().getElseBlockStmtBlockParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__InitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getInitAssStmtParserRuleCall_2_0()); }
		ruleAssStmt
		{ after(grammarAccess.getForStmtAccess().getInitAssStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ConditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getConditionExprParserRuleCall_4_0()); }
		ruleExpr
		{ after(grammarAccess.getForStmtAccess().getConditionExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__LoopAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getLoopAssStmtParserRuleCall_6_0()); }
		ruleAssStmt
		{ after(grammarAccess.getForStmtAccess().getLoopAssStmtParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__StmtBlockAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getStmtBlockStmtBlockParserRuleCall_8_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getForStmtAccess().getStmtBlockStmtBlockParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssStmtAccess().getVariableVarParserRuleCall_0_0()); }
		ruleVar
		{ after(grammarAccess.getAssStmtAccess().getVariableVarParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssStmtAccess().getExpressionExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAssStmtAccess().getExpressionExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getIdAllDeclsCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVarAccess().getIdAllDeclsIDFTerminalRuleCall_0_0_1()); }
			RULE_IDF
			{ after(grammarAccess.getVarAccess().getIdAllDeclsIDFTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVarAccess().getIdAllDeclsCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__IndexAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getIndexExprParserRuleCall_1_2_0()); }
		ruleExpr
		{ after(grammarAccess.getVarAccess().getIndexExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__MemberNameAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getMemberNameIDFTerminalRuleCall_2_2_0()); }
		RULE_IDF
		{ after(grammarAccess.getVarAccess().getMemberNameIDFTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjExprAccess().getRightConjExprParserRuleCall_1_2_0()); }
		ruleConjExpr
		{ after(grammarAccess.getDisjExprAccess().getRightConjExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjExprAccess().getRightRelExprParserRuleCall_1_2_0()); }
		ruleRelExpr
		{ after(grammarAccess.getConjExprAccess().getRightRelExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getRightAddExprParserRuleCall_1_1_0()); }
		ruleAddExpr
		{ after(grammarAccess.getRelExprAccess().getRightAddExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getRightMultExprParserRuleCall_1_1_0()); }
		ruleMultExpr
		{ after(grammarAccess.getAddExprAccess().getRightMultExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getMultExprAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__ExprAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_0_1_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimExprAccess().getValueNUMBERTerminalRuleCall_0_1_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getPrimExprAccess().getValueNUMBERTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimExpr__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimExprAccess().getRightVarParserRuleCall_1_1_2_0()); }
		ruleVar
		{ after(grammarAccess.getPrimExprAccess().getRightVarParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_IDF : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_NUMBER : ('0'..'9')+;

RULE_COMMENT : '//' ~(('\n'|'\r'))*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
