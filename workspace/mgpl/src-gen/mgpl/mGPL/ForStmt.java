/**
 * generated by Xtext 2.16.0
 */
package mgpl.mGPL;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>For Stmt</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link mgpl.mGPL.ForStmt#getInit <em>Init</em>}</li>
 *   <li>{@link mgpl.mGPL.ForStmt#getCondition <em>Condition</em>}</li>
 *   <li>{@link mgpl.mGPL.ForStmt#getLoop <em>Loop</em>}</li>
 *   <li>{@link mgpl.mGPL.ForStmt#getStmtBlock <em>Stmt Block</em>}</li>
 * </ul>
 *
 * @see mgpl.mGPL.MGPLPackage#getForStmt()
 * @model
 * @generated
 */
public interface ForStmt extends Stmt
{
  /**
   * Returns the value of the '<em><b>Init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Init</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Init</em>' containment reference.
   * @see #setInit(AssStmt)
   * @see mgpl.mGPL.MGPLPackage#getForStmt_Init()
   * @model containment="true"
   * @generated
   */
  AssStmt getInit();

  /**
   * Sets the value of the '{@link mgpl.mGPL.ForStmt#getInit <em>Init</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Init</em>' containment reference.
   * @see #getInit()
   * @generated
   */
  void setInit(AssStmt value);

  /**
   * Returns the value of the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Condition</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Condition</em>' containment reference.
   * @see #setCondition(Expr)
   * @see mgpl.mGPL.MGPLPackage#getForStmt_Condition()
   * @model containment="true"
   * @generated
   */
  Expr getCondition();

  /**
   * Sets the value of the '{@link mgpl.mGPL.ForStmt#getCondition <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Condition</em>' containment reference.
   * @see #getCondition()
   * @generated
   */
  void setCondition(Expr value);

  /**
   * Returns the value of the '<em><b>Loop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Loop</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Loop</em>' containment reference.
   * @see #setLoop(AssStmt)
   * @see mgpl.mGPL.MGPLPackage#getForStmt_Loop()
   * @model containment="true"
   * @generated
   */
  AssStmt getLoop();

  /**
   * Sets the value of the '{@link mgpl.mGPL.ForStmt#getLoop <em>Loop</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Loop</em>' containment reference.
   * @see #getLoop()
   * @generated
   */
  void setLoop(AssStmt value);

  /**
   * Returns the value of the '<em><b>Stmt Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Stmt Block</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Stmt Block</em>' containment reference.
   * @see #setStmtBlock(StmtBlock)
   * @see mgpl.mGPL.MGPLPackage#getForStmt_StmtBlock()
   * @model containment="true"
   * @generated
   */
  StmtBlock getStmtBlock();

  /**
   * Sets the value of the '{@link mgpl.mGPL.ForStmt#getStmtBlock <em>Stmt Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Stmt Block</em>' containment reference.
   * @see #getStmtBlock()
   * @generated
   */
  void setStmtBlock(StmtBlock value);

} // ForStmt
