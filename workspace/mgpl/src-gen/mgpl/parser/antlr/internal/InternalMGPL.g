/*
 * generated by Xtext 2.16.0
 */
grammar InternalMGPL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package mgpl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package mgpl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import mgpl.services.MGPLGrammarAccess;

}

@parser::members {

 	private MGPLGrammarAccess grammarAccess;

    public InternalMGPLParser(TokenStream input, MGPLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Prog";
   	}

   	@Override
   	protected MGPLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProg
entryRuleProg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgRule()); }
	iv_ruleProg=ruleProg
	{ $current=$iv_ruleProg.current; }
	EOF;

// Rule Prog
ruleProg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='game'
		{
			newLeafNode(otherlv_0, grammarAccess.getProgAccess().getGameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_IDF
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProgAccess().getNameIDFTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProgRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"mgpl.MGPL.IDF");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getProgAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProgAccess().getAttrAttrAssParserRuleCall_3_0_0());
					}
					lv_attr_3_0=ruleAttrAss
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgRule());
						}
						add(
							$current,
							"attr",
							lv_attr_3_0,
							"mgpl.MGPL.AttrAss");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getProgAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProgAccess().getAttrAttrAssParserRuleCall_3_1_1_0());
						}
						lv_attr_5_0=ruleAttrAss
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProgRule());
							}
							add(
								$current,
								"attr",
								lv_attr_5_0,
								"mgpl.MGPL.AttrAss");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getProgAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProgAccess().getDeclarationsDeclParserRuleCall_5_0());
				}
				lv_declarations_7_0=ruleDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_7_0,
						"mgpl.MGPL.Decl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProgAccess().getInitStmtBlockParserRuleCall_6_0());
				}
				lv_init_8_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgRule());
					}
					set(
						$current,
						"init",
						lv_init_8_0,
						"mgpl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProgAccess().getBlocksBlockParserRuleCall_7_0());
				}
				lv_blocks_9_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgRule());
					}
					add(
						$current,
						"blocks",
						lv_blocks_9_0,
						"mgpl.MGPL.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDecl
entryRuleDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclRule()); }
	iv_ruleDecl=ruleDecl
	{ $current=$iv_ruleDecl.current; }
	EOF;

// Rule Decl
ruleDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_0());
			}
			this_VarDecl_0=ruleVarDecl
			{
				$current = $this_VarDecl_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_0_1());
			}
			this_ObjDecl_1=ruleObjDecl
			{
				$current = $this_ObjDecl_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeclAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='int'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarDeclRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "int");
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_IDF
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVarDeclAccess().getNameIDFTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"mgpl.MGPL.IDF");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDeclAccess().getInitInitParserRuleCall_2_0_0());
					}
					lv_init_2_0=ruleInit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDeclRule());
						}
						set(
							$current,
							"init",
							lv_init_2_0,
							"mgpl.MGPL.Init");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getVarDeclAccess().getArrayDeclVariableAction_2_1_0(),
							$current);
					}
				)
				otherlv_4='['
				{
					newLeafNode(otherlv_4, grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_2_1_1());
				}
				(
					(
						lv_length_5_0=RULE_NUMBER
						{
							newLeafNode(lv_length_5_0, grammarAccess.getVarDeclAccess().getLengthNUMBERTerminalRuleCall_2_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVarDeclRule());
							}
							setWithLastConsumed(
								$current,
								"length",
								lv_length_5_0,
								"mgpl.MGPL.NUMBER");
						}
					)
				)
				otherlv_6=']'
				{
					newLeafNode(otherlv_6, grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_2_1_3());
				}
			)
		)
	)
;

// Entry rule entryRuleInit
entryRuleInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitRule()); }
	iv_ruleInit=ruleInit
	{ $current=$iv_ruleInit.current; }
	EOF;

// Rule Init
ruleInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='='
		{
			newLeafNode(otherlv_0, grammarAccess.getInitAccess().getEqualsSignKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getInitAccess().getExprParserRuleCall_1());
		}
		this_Expr_1=ruleExpr
		{
			$current = $this_Expr_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleObjDecl
entryRuleObjDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjDeclRule()); }
	iv_ruleObjDecl=ruleObjDecl
	{ $current=$iv_ruleObjDecl.current; }
	EOF;

// Rule ObjDecl
ruleObjDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObjDeclAccess().getTypeObjTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleObjType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjDeclRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"mgpl.MGPL.ObjType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_IDF
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObjDeclAccess().getNameIDFTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"mgpl.MGPL.IDF");
				}
			)
		)
		(
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_2_0_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getObjDeclAccess().getAttrAttrAssParserRuleCall_2_0_1_0_0());
							}
							lv_attr_3_0=ruleAttrAss
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getObjDeclRule());
								}
								add(
									$current,
									"attr",
									lv_attr_3_0,
									"mgpl.MGPL.AttrAss");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_4=','
						{
							newLeafNode(otherlv_4, grammarAccess.getObjDeclAccess().getCommaKeyword_2_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getObjDeclAccess().getAttrAttrAssParserRuleCall_2_0_1_1_1_0());
								}
								lv_attr_5_0=ruleAttrAss
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getObjDeclRule());
									}
									add(
										$current,
										"attr",
										lv_attr_5_0,
										"mgpl.MGPL.AttrAss");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_2_0_2());
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getObjDeclAccess().getArrayDeclVariableAction_2_1_0(),
							$current);
					}
				)
				otherlv_8='['
				{
					newLeafNode(otherlv_8, grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_2_1_1());
				}
				(
					(
						lv_length_9_0=RULE_NUMBER
						{
							newLeafNode(lv_length_9_0, grammarAccess.getObjDeclAccess().getLengthNUMBERTerminalRuleCall_2_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getObjDeclRule());
							}
							setWithLastConsumed(
								$current,
								"length",
								lv_length_9_0,
								"mgpl.MGPL.NUMBER");
						}
					)
				)
				otherlv_10=']'
				{
					newLeafNode(otherlv_10, grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_2_1_3());
				}
			)
		)
	)
;

// Entry rule entryRuleObjType
entryRuleObjType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getObjTypeRule()); }
	iv_ruleObjType=ruleObjType
	{ $current=$iv_ruleObjType.current.getText(); }
	EOF;

// Rule ObjType
ruleObjType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='rectangle'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getObjTypeAccess().getRectangleKeyword_0());
		}
		    |
		kw='triangle'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getObjTypeAccess().getTriangleKeyword_1());
		}
		    |
		kw='circle'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getObjTypeAccess().getCircleKeyword_2());
		}
	)
;

// Entry rule entryRuleAttrAss
entryRuleAttrAss returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttrAssRule()); }
	iv_ruleAttrAss=ruleAttrAss
	{ $current=$iv_ruleAttrAss.current; }
	EOF;

// Rule AttrAss
ruleAttrAss returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_IDF
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttrAssAccess().getNameIDFTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttrAssRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"mgpl.MGPL.IDF");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttrAssAccess().getValueExprParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttrAssRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"mgpl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0());
		}
		this_AnimBlock_0=ruleAnimBlock
		{
			$current = $this_AnimBlock_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1());
		}
		this_EventBlock_1=ruleEventBlock
		{
			$current = $this_EventBlock_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnimBlock
entryRuleAnimBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnimBlockRule()); }
	iv_ruleAnimBlock=ruleAnimBlock
	{ $current=$iv_ruleAnimBlock.current; }
	EOF;

// Rule AnimBlock
ruleAnimBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='animation'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnimBlockAccess().getAnimationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_IDF
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAnimBlockAccess().getNameIDFTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnimBlockRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"mgpl.MGPL.IDF");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnimBlockAccess().getParamParamDeclParserRuleCall_3_0());
				}
				lv_param_3_0=ruleParamDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnimBlockRule());
					}
					set(
						$current,
						"param",
						lv_param_3_0,
						"mgpl.MGPL.ParamDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnimBlockAccess().getStmtBlockStmtBlockParserRuleCall_5_0());
				}
				lv_stmtBlock_5_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnimBlockRule());
					}
					set(
						$current,
						"stmtBlock",
						lv_stmtBlock_5_0,
						"mgpl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParamDecl
entryRuleParamDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamDeclRule()); }
	iv_ruleParamDecl=ruleParamDecl
	{ $current=$iv_ruleParamDecl.current; }
	EOF;

// Rule ParamDecl
ruleParamDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParamDeclAccess().getTypeObjTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleObjType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamDeclRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"mgpl.MGPL.ObjType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_IDF
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParamDeclAccess().getNameIDFTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"mgpl.MGPL.IDF");
				}
			)
		)
	)
;

// Entry rule entryRuleEventBlock
entryRuleEventBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventBlockRule()); }
	iv_ruleEventBlock=ruleEventBlock
	{ $current=$iv_ruleEventBlock.current; }
	EOF;

// Rule EventBlock
ruleEventBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='on'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventBlockAccess().getOnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventBlockAccess().getKeyStrokeKeyStrokeParserRuleCall_1_0());
				}
				lv_keyStroke_1_0=ruleKeyStroke
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventBlockRule());
					}
					set(
						$current,
						"keyStroke",
						lv_keyStroke_1_0,
						"mgpl.MGPL.KeyStroke");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventBlockAccess().getStmtBlockStmtBlockParserRuleCall_2_0());
				}
				lv_stmtBlock_2_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventBlockRule());
					}
					set(
						$current,
						"stmtBlock",
						lv_stmtBlock_2_0,
						"mgpl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKeyStroke
entryRuleKeyStroke returns [String current=null]:
	{ newCompositeNode(grammarAccess.getKeyStrokeRule()); }
	iv_ruleKeyStroke=ruleKeyStroke
	{ $current=$iv_ruleKeyStroke.current.getText(); }
	EOF;

// Rule KeyStroke
ruleKeyStroke returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='space'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeyStrokeAccess().getSpaceKeyword_0());
		}
		    |
		kw='leftarrow'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeyStrokeAccess().getLeftarrowKeyword_1());
		}
		    |
		kw='rightarrow'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeyStrokeAccess().getRightarrowKeyword_2());
		}
		    |
		kw='uparrow'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeyStrokeAccess().getUparrowKeyword_3());
		}
		    |
		kw='downarrow'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeyStrokeAccess().getDownarrowKeyword_4());
		}
	)
;

// Entry rule entryRuleStmtBlock
entryRuleStmtBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStmtBlockRule()); }
	iv_ruleStmtBlock=ruleStmtBlock
	{ $current=$iv_ruleStmtBlock.current; }
	EOF;

// Rule StmtBlock
ruleStmtBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStmtBlockAccess().getStmtBlockAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStmtBlockAccess().getStmtsStmtParserRuleCall_2_0());
				}
				lv_stmts_2_0=ruleStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStmtBlockRule());
					}
					add(
						$current,
						"stmts",
						lv_stmts_2_0,
						"mgpl.MGPL.Stmt");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleStmt
entryRuleStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStmtRule()); }
	iv_ruleStmt=ruleStmt
	{ $current=$iv_ruleStmt.current; }
	EOF;

// Rule Stmt
ruleStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0());
		}
		this_IfStmt_0=ruleIfStmt
		{
			$current = $this_IfStmt_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1());
		}
		this_ForStmt_1=ruleForStmt
		{
			$current = $this_ForStmt_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2_0());
			}
			this_AssStmt_2=ruleAssStmt
			{
				$current = $this_AssStmt_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getStmtAccess().getSemicolonKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleIfStmt
entryRuleIfStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtRule()); }
	iv_ruleIfStmt=ruleIfStmt
	{ $current=$iv_ruleIfStmt.current; }
	EOF;

// Rule IfStmt
ruleIfStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getConditionExprParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"mgpl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getThenBlockStmtBlockParserRuleCall_4_0());
				}
				lv_thenBlock_4_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"thenBlock",
						lv_thenBlock_4_0,
						"mgpl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getElseBlockStmtBlockParserRuleCall_5_1_0());
					}
					lv_elseBlock_6_0=ruleStmtBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"elseBlock",
							lv_elseBlock_6_0,
							"mgpl.MGPL.StmtBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleForStmt
entryRuleForStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStmtRule()); }
	iv_ruleForStmt=ruleForStmt
	{ $current=$iv_ruleForStmt.current; }
	EOF;

// Rule ForStmt
ruleForStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForStmtAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getInitAssStmtParserRuleCall_2_0());
				}
				lv_init_2_0=ruleAssStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"init",
						lv_init_2_0,
						"mgpl.MGPL.AssStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getForStmtAccess().getSemicolonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getConditionExprParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"mgpl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getForStmtAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getLoopAssStmtParserRuleCall_6_0());
				}
				lv_loop_6_0=ruleAssStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"loop",
						lv_loop_6_0,
						"mgpl.MGPL.AssStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getForStmtAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getStmtBlockStmtBlockParserRuleCall_8_0());
				}
				lv_stmtBlock_8_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"stmtBlock",
						lv_stmtBlock_8_0,
						"mgpl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAssStmt
entryRuleAssStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssStmtRule()); }
	iv_ruleAssStmt=ruleAssStmt
	{ $current=$iv_ruleAssStmt.current; }
	EOF;

// Rule AssStmt
ruleAssStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssStmtAccess().getVariableVarParserRuleCall_0_0());
				}
				lv_variable_0_0=ruleVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssStmtRule());
					}
					set(
						$current,
						"variable",
						lv_variable_0_0,
						"mgpl.MGPL.Var");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssStmtAccess().getExpressionExprParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssStmtRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"mgpl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVar
entryRuleVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarRule()); }
	iv_ruleVar=ruleVar
	{ $current=$iv_ruleVar.current; }
	EOF;

// Rule Var
ruleVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarRule());
					}
				}
				otherlv_0=RULE_IDF
				{
					newLeafNode(otherlv_0, grammarAccess.getVarAccess().getIdAllDeclsCrossReference_0_0());
				}
			)
		)
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getVarAccess().getElementSelectVariableAction_1_0(),
						$current);
				}
			)
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarAccess().getIndexExprParserRuleCall_1_2_0());
					}
					lv_index_3_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarRule());
						}
						set(
							$current,
							"index",
							lv_index_3_0,
							"mgpl.MGPL.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getVarAccess().getMemberSelectVariableAction_2_0(),
						$current);
				}
			)
			otherlv_6='.'
			{
				newLeafNode(otherlv_6, grammarAccess.getVarAccess().getFullStopKeyword_2_1());
			}
			(
				(
					lv_memberName_7_0=RULE_IDF
					{
						newLeafNode(lv_memberName_7_0, grammarAccess.getVarAccess().getMemberNameIDFTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarRule());
						}
						setWithLastConsumed(
							$current,
							"memberName",
							lv_memberName_7_0,
							"mgpl.MGPL.IDF");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	iv_ruleExpr=ruleExpr
	{ $current=$iv_ruleExpr.current; }
	EOF;

// Rule Expr
ruleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExprAccess().getDisjExprParserRuleCall());
	}
	this_DisjExpr_0=ruleDisjExpr
	{
		$current = $this_DisjExpr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleDisjExpr
entryRuleDisjExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDisjExprRule()); }
	iv_ruleDisjExpr=ruleDisjExpr
	{ $current=$iv_ruleDisjExpr.current; }
	EOF;

// Rule DisjExpr
ruleDisjExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDisjExprAccess().getConjExprParserRuleCall_0());
		}
		this_ConjExpr_0=ruleConjExpr
		{
			$current = $this_ConjExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getDisjExprAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='||'
			{
				newLeafNode(otherlv_2, grammarAccess.getDisjExprAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDisjExprAccess().getRightConjExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleConjExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDisjExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"mgpl.MGPL.ConjExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConjExpr
entryRuleConjExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConjExprRule()); }
	iv_ruleConjExpr=ruleConjExpr
	{ $current=$iv_ruleConjExpr.current; }
	EOF;

// Rule ConjExpr
ruleConjExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConjExprAccess().getRelExprParserRuleCall_0());
		}
		this_RelExpr_0=ruleRelExpr
		{
			$current = $this_RelExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getConjExprAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='&&'
			{
				newLeafNode(otherlv_2, grammarAccess.getConjExprAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConjExprAccess().getRightRelExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleRelExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConjExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"mgpl.MGPL.RelExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelExpr
entryRuleRelExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelExprRule()); }
	iv_ruleRelExpr=ruleRelExpr
	{ $current=$iv_ruleRelExpr.current; }
	EOF;

// Rule RelExpr
ruleRelExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0());
		}
		this_AddExpr_0=ruleAddExpr
		{
			$current = $this_AddExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelExprAccess().getEqualsLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='=='
					{
						newLeafNode(otherlv_2, grammarAccess.getRelExprAccess().getEqualsSignEqualsSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelExprAccess().getLessLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='<'
					{
						newLeafNode(otherlv_4, grammarAccess.getRelExprAccess().getLessThanSignKeyword_1_0_1_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelExprAccess().getLessOrEqualsLeftAction_1_0_2_0(),
								$current);
						}
					)
					otherlv_6='<='
					{
						newLeafNode(otherlv_6, grammarAccess.getRelExprAccess().getLessThanSignEqualsSignKeyword_1_0_2_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelExprAccess().getRightAddExprParserRuleCall_1_1_0());
					}
					lv_right_7_0=ruleAddExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelExprRule());
						}
						set(
							$current,
							"right",
							lv_right_7_0,
							"mgpl.MGPL.AddExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAddExpr
entryRuleAddExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddExprRule()); }
	iv_ruleAddExpr=ruleAddExpr
	{ $current=$iv_ruleAddExpr.current; }
	EOF;

// Rule AddExpr
ruleAddExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAddExprAccess().getMultExprParserRuleCall_0());
		}
		this_MultExpr_0=ruleMultExpr
		{
			$current = $this_MultExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAddExprAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getAddExprAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAddExprAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getAddExprAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAddExprAccess().getRightMultExprParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMultExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddExprRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"mgpl.MGPL.MultExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultExpr
entryRuleMultExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultExprRule()); }
	iv_ruleMultExpr=ruleMultExpr
	{ $current=$iv_ruleMultExpr.current; }
	EOF;

// Rule MultExpr
ruleMultExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultExprAccess().getUnaryExprParserRuleCall_0());
		}
		this_UnaryExpr_0=ruleUnaryExpr
		{
			$current = $this_UnaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultExprAccess().getDivideLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='/'
					{
						newLeafNode(otherlv_2, grammarAccess.getMultExprAccess().getSolidusKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultExprAccess().getTimesLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='*'
					{
						newLeafNode(otherlv_4, grammarAccess.getMultExprAccess().getAsteriskKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultExprAccess().getRightUnaryExprParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleUnaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultExprRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"mgpl.MGPL.UnaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	iv_ruleUnaryExpr=ruleUnaryExpr
	{ $current=$iv_ruleUnaryExpr.current; }
	EOF;

// Rule UnaryExpr
ruleUnaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							$current = forceCreateModelElement(
								grammarAccess.getUnaryExprAccess().getNegationAction_0_0_0_0(),
								$current);
						}
					)
					otherlv_1='-'
					{
						newLeafNode(otherlv_1, grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_0_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElement(
								grammarAccess.getUnaryExprAccess().getComplementAction_0_0_1_0(),
								$current);
						}
					)
					otherlv_3='!'
					{
						newLeafNode(otherlv_3, grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_0_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_0_1_0());
					}
					lv_expr_4_0=ruleUnaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
						}
						set(
							$current,
							"expr",
							lv_expr_4_0,
							"mgpl.MGPL.UnaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimExprParserRuleCall_1());
		}
		this_PrimExpr_5=rulePrimExpr
		{
			$current = $this_PrimExpr_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimExpr
entryRulePrimExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimExprRule()); }
	iv_rulePrimExpr=rulePrimExpr
	{ $current=$iv_rulePrimExpr.current; }
	EOF;

// Rule PrimExpr
rulePrimExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimExprAccess().getNumberLiteralAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_NUMBER
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPrimExprAccess().getValueNUMBERTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimExprRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"mgpl.MGPL.NUMBER");
					}
				)
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getPrimExprAccess().getVarParserRuleCall_1_0());
			}
			this_Var_2=ruleVar
			{
				$current = $this_Var_2.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPrimExprAccess().getTouchesLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_4='touches'
				{
					newLeafNode(otherlv_4, grammarAccess.getPrimExprAccess().getTouchesKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimExprAccess().getRightVarParserRuleCall_1_1_2_0());
						}
						lv_right_5_0=ruleVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimExprRule());
							}
							set(
								$current,
								"right",
								lv_right_5_0,
								"mgpl.MGPL.Var");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getPrimExprAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimExprAccess().getExprParserRuleCall_2_1());
			}
			this_Expr_7=ruleExpr
			{
				$current = $this_Expr_7.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getPrimExprAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

RULE_IDF : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_NUMBER : ('0'..'9')+;

RULE_COMMENT : '//' ~(('\n'|'\r'))*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
